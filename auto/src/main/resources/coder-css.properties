# Database connection
datasource.url=jdbc:mysql://192.168.10.77:3306/customer_service_system_dev?serverTimezone=GMT%2B8&verifyServerCertificate=false&useSSL=true
datasource.username=root
datasource.password=ys@2017

# Locations of generated files. The locations of generated files follow a typical Maven project structure, that is, source codes are placed under "src/main/java"
# and resources are placed under "src/main/resources" and both are relative to project root. So the packages and resources given below are relative
# to these two directories respectively by default. For a multi-module project, each module has its own Maven structure, so in this case you can specify the module
# of each package or resources by prepending "<module name>:" to the relative paths, such as "module1:net.ivanhjc.projectX.model.bean" and "module2:database/mapper",
# etc.
author=Ivan Huang
project.root=/home/ivanhjc/Projects/customer-service-system/customer-service-system-web
package.bean=com.winsky.lease.css.common.model.bean
package.dao=com.winsky.lease.css.dao
package.service=com.winsky.lease.css.service
package.service.impl=com.winsky.lease.css.service.impl
package.controller=com.winsky.lease.css.controller
package.common=com.winsky.lease.css.common
package.enum=com.winsky.lease.css.common.enums
package.APIResult=com.winsky.lease.css.common.model.vo
resources.mapper=mapper/common

# Name conventions of generated files. By convention the generated files are named the same as the tables from which they are generated but with Java conventions
# in mind, that is, if the table names use snake case then the generated files will use camel case, and if the table names are prefixed with some string you can
# configure whether or not to drop the prefix by calling `Coder.CONFIG.dropPrefix()`. Besides, you can configure what each type of file is suffixed with as listed
# below.
prefix.table=t_
suffix.bean=Bean
suffix.mapper=Mapper
suffix.dao=Dao
suffix.service=Service
suffix.service.impl=ServiceImpl
suffix.controller=Controller